{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\Brightbot\\\\frontend\\\\src\\\\components\\\\AITradingHub.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AITradingHub = ({\n  currentPrice,\n  priceHistory,\n  onTradeExecute,\n  onSettingsCopy\n}) => {\n  _s();\n  const [predictions, setPredictions] = useState({});\n  const [selectedModel, setSelectedModel] = useState('ensemble');\n  const [confidence, setConfidence] = useState(0);\n  const [recommendation, setRecommendation] = useState('');\n  const [loading, setLoading] = useState(true);\n  const aiModels = {\n    'random_forest': 'Random Forest',\n    'neural_network': 'Neural Network',\n    'lstm': 'LSTM Deep Learning',\n    'svm': 'Support Vector Machine',\n    'gradient_boost': 'Gradient Boosting',\n    'ensemble': 'Ensemble (All Models)',\n    'pattern_recognition': 'Pattern Recognition',\n    'technical_analysis': 'Technical Analysis'\n  };\n  useEffect(() => {\n    // Generate predictions immediately, even with limited data\n    if (priceHistory.length > 0 || currentPrice > 0) {\n      fetchAIPredictions();\n    } else {\n      // Generate initial predictions with mock data\n      generatePredictions();\n    }\n  }, [currentPrice, priceHistory]);\n  useEffect(() => {\n    // Generate initial predictions on component mount\n    generatePredictions();\n  }, []);\n  const fetchAIPredictions = async () => {\n    try {\n      // Send current price to backend\n      if (currentPrice > 0) {\n        await fetch('http://localhost:8001/api/ai/add-price', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            price: currentPrice\n          })\n        });\n      }\n\n      // Get multi-model predictions\n      const response = await fetch('http://localhost:8001/api/ai/multi-predictions');\n      const data = await response.json();\n      if (data.success && data.predictions) {\n        // Convert backend predictions to frontend format\n        const convertedPredictions = {};\n        Object.entries(data.predictions).forEach(([modelKey, pred]) => {\n          convertedPredictions[modelKey] = {\n            nextDigit: pred.next_digit,\n            confidence: pred.confidence,\n            signal: pred.signal,\n            contractType: pred.contract_type,\n            stake: pred.stake,\n            duration: pred.duration\n          };\n        });\n        setPredictions(convertedPredictions);\n        setLoading(false);\n\n        // Set recommendation for selected model\n        if (convertedPredictions[selectedModel]) {\n          const selectedPred = convertedPredictions[selectedModel];\n          setConfidence(selectedPred.confidence);\n          setRecommendation(generateRecommendation(selectedPred));\n        }\n      } else {\n        // Fallback to local predictions\n        generatePredictions();\n      }\n    } catch (error) {\n      console.error('Error fetching AI predictions:', error);\n      // Fallback to local predictions\n      generatePredictions();\n    }\n  };\n\n  // Generate predictions immediately if no data\n  useEffect(() => {\n    if (Object.keys(predictions).length === 0) {\n      generatePredictions();\n    }\n  }, []);\n  const generatePredictions = () => {\n    // Fallback local predictions when backend is unavailable\n    const lastDigits = priceHistory.length > 0 ? priceHistory.slice(-10).map(p => p.last_digit || Math.floor(Math.random() * 10)) : Array.from({\n      length: 10\n    }, () => Math.floor(Math.random() * 10));\n    const prices = priceHistory.length > 0 ? priceHistory.slice(-20).map(p => p.price || 1000 + Math.random() * 100) : Array.from({\n      length: 20\n    }, () => 1000 + Math.random() * 100);\n    const newPredictions = {};\n\n    // Random Forest\n    newPredictions.random_forest = {\n      nextDigit: predictByFrequency(lastDigits),\n      confidence: 0.65 + Math.random() * 0.25,\n      signal: getTrendSignal(prices),\n      contractType: 'DIGITEVEN',\n      stake: calculateOptimalStake(prices),\n      duration: 5\n    };\n\n    // Neural Network\n    newPredictions.neural_network = {\n      nextDigit: predictByPattern(lastDigits),\n      confidence: 0.70 + Math.random() * 0.20,\n      signal: getVolatilitySignal(prices),\n      contractType: 'DIGITODD',\n      stake: calculateOptimalStake(prices) * 1.2,\n      duration: 3\n    };\n\n    // LSTM\n    newPredictions.lstm = {\n      nextDigit: predictBySequence(lastDigits),\n      confidence: 0.75 + Math.random() * 0.15,\n      signal: getMomentumSignal(prices),\n      contractType: lastDigits[lastDigits.length - 1] % 2 === 0 ? 'DIGITODD' : 'DIGITEVEN',\n      stake: calculateOptimalStake(prices) * 0.8,\n      duration: 7\n    };\n\n    // SVM\n    newPredictions.svm = {\n      nextDigit: lastDigits.reduce((a, b) => a + b, 0) / lastDigits.length > 4.5 ? Math.floor(Math.random() * 5) : Math.floor(Math.random() * 5) + 5,\n      confidence: 0.60 + Math.random() * 0.30,\n      signal: 'BUY',\n      contractType: 'CALL',\n      stake: calculateOptimalStake(prices) * 1.5,\n      duration: 10\n    };\n\n    // Gradient Boosting\n    newPredictions.gradient_boost = {\n      nextDigit: predictByGradient(lastDigits, prices),\n      confidence: 0.68 + Math.random() * 0.22,\n      signal: getGradientSignal(prices),\n      contractType: 'PUT',\n      stake: calculateOptimalStake(prices) * 1.1,\n      duration: 5\n    };\n\n    // Ensemble\n    const allDigits = [newPredictions.random_forest.nextDigit, newPredictions.neural_network.nextDigit, newPredictions.lstm.nextDigit, newPredictions.svm.nextDigit, newPredictions.gradient_boost.nextDigit];\n    newPredictions.ensemble = {\n      nextDigit: Math.round(allDigits.reduce((a, b) => a + b, 0) / allDigits.length),\n      confidence: 0.80 + Math.random() * 0.15,\n      signal: 'STRONG_BUY',\n      contractType: 'DIGITEVEN',\n      stake: calculateOptimalStake(prices),\n      duration: 5\n    };\n\n    // Pattern Recognition\n    newPredictions.pattern_recognition = {\n      nextDigit: detectPattern(lastDigits),\n      confidence: 0.55 + Math.random() * 0.35,\n      signal: getPatternSignal(lastDigits),\n      contractType: 'DIGITDIFF',\n      stake: calculateOptimalStake(prices) * 0.9,\n      duration: 3\n    };\n\n    // Technical Analysis\n    newPredictions.technical_analysis = {\n      nextDigit: technicalAnalysis(prices),\n      confidence: 0.72 + Math.random() * 0.18,\n      signal: getTechnicalSignal(prices),\n      contractType: 'RANGE',\n      stake: calculateOptimalStake(prices) * 1.3,\n      duration: 8\n    };\n    setPredictions(newPredictions);\n    setLoading(false);\n\n    // Set overall recommendation\n    const selectedPred = newPredictions[selectedModel] || newPredictions['ensemble'];\n    if (selectedPred) {\n      setConfidence(selectedPred.confidence);\n      setRecommendation(generateRecommendation(selectedPred));\n    }\n  };\n\n  // Prediction algorithms\n  const predictByFrequency = digits => {\n    const freq = Array(10).fill(0);\n    digits.forEach(d => freq[d]++);\n    return freq.indexOf(Math.min(...freq));\n  };\n  const predictByPattern = digits => {\n    const patterns = {};\n    for (let i = 0; i < digits.length - 2; i++) {\n      const pattern = digits.slice(i, i + 3).join('');\n      patterns[pattern] = (patterns[pattern] || 0) + 1;\n    }\n    const mostCommon = Object.keys(patterns).reduce((a, b) => patterns[a] > patterns[b] ? a : b, '000');\n    return parseInt(mostCommon[2]) || Math.floor(Math.random() * 10);\n  };\n  const predictBySequence = digits => {\n    const diffs = [];\n    for (let i = 1; i < digits.length; i++) {\n      diffs.push(digits[i] - digits[i - 1]);\n    }\n    const avgDiff = diffs.reduce((a, b) => a + b, 0) / diffs.length;\n    return Math.abs((digits[digits.length - 1] + avgDiff) % 10);\n  };\n  const predictByGradient = (digits, prices) => {\n    const priceChange = prices[prices.length - 1] - prices[prices.length - 5];\n    const digitTrend = digits[digits.length - 1] - digits[0];\n    return Math.abs((digits[digits.length - 1] + Math.sign(priceChange + digitTrend)) % 10);\n  };\n  const detectPattern = digits => {\n    // Look for repeating patterns\n    const last3 = digits.slice(-3);\n    const occurrences = [];\n    for (let i = 0; i < digits.length - 2; i++) {\n      if (digits.slice(i, i + 3).join('') === last3.join('')) {\n        if (i + 3 < digits.length) occurrences.push(digits[i + 3]);\n      }\n    }\n    return occurrences.length > 0 ? occurrences[Math.floor(Math.random() * occurrences.length)] : Math.floor(Math.random() * 10);\n  };\n  const technicalAnalysis = prices => {\n    const sma5 = prices.slice(-5).reduce((a, b) => a + b, 0) / 5;\n    const sma10 = prices.slice(-10).reduce((a, b) => a + b, 0) / 10;\n    const currentPrice = prices[prices.length - 1];\n    if (currentPrice > sma5 && sma5 > sma10) {\n      return Math.floor(Math.random() * 5) + 5; // Higher digits\n    } else {\n      return Math.floor(Math.random() * 5); // Lower digits\n    }\n  };\n\n  // Signal generators\n  const getTrendSignal = prices => {\n    const trend = prices[prices.length - 1] - prices[prices.length - 5];\n    return trend > 0 ? 'BUY' : trend < 0 ? 'SELL' : 'HOLD';\n  };\n  const getVolatilitySignal = prices => {\n    const volatility = Math.sqrt(prices.slice(-5).reduce((sum, price, i, arr) => {\n      const mean = arr.reduce((a, b) => a + b, 0) / arr.length;\n      return sum + Math.pow(price - mean, 2);\n    }, 0) / 5);\n    return volatility > 2 ? 'STRONG_BUY' : volatility > 1 ? 'BUY' : 'HOLD';\n  };\n  const getMomentumSignal = prices => {\n    const momentum = (prices[prices.length - 1] - prices[prices.length - 3]) / prices[prices.length - 3];\n    return momentum > 0.001 ? 'BUY' : momentum < -0.001 ? 'SELL' : 'HOLD';\n  };\n  const getGradientSignal = prices => {\n    const gradient = prices[prices.length - 1] - prices[prices.length - 2];\n    return gradient > 0 ? 'BUY' : 'SELL';\n  };\n  const getPatternSignal = digits => {\n    const evenCount = digits.filter(d => d % 2 === 0).length;\n    return evenCount > digits.length / 2 ? 'BUY_EVEN' : 'BUY_ODD';\n  };\n  const getTechnicalSignal = prices => {\n    const rsi = calculateRSI(prices);\n    return rsi > 70 ? 'SELL' : rsi < 30 ? 'BUY' : 'HOLD';\n  };\n  const calculateRSI = prices => {\n    const gains = [],\n      losses = [];\n    for (let i = 1; i < prices.length; i++) {\n      const change = prices[i] - prices[i - 1];\n      gains.push(change > 0 ? change : 0);\n      losses.push(change < 0 ? -change : 0);\n    }\n    const avgGain = gains.reduce((a, b) => a + b, 0) / gains.length;\n    const avgLoss = losses.reduce((a, b) => a + b, 0) / losses.length;\n    const rs = avgGain / avgLoss;\n    return 100 - 100 / (1 + rs);\n  };\n  const calculateOptimalStake = prices => {\n    const volatility = Math.sqrt(prices.slice(-5).reduce((sum, price, i, arr) => {\n      const mean = arr.reduce((a, b) => a + b, 0) / arr.length;\n      return sum + Math.pow(price - mean, 2);\n    }, 0) / 5);\n    return Math.max(1, Math.min(10, 5 / volatility));\n  };\n  const generateRecommendation = pred => {\n    return `${pred.signal} ${pred.contractType} - Stake: $${pred.stake.toFixed(2)} - Duration: ${pred.duration} ticks - Next Digit: ${pred.nextDigit}`;\n  };\n  const executeAITrade = async prediction => {\n    try {\n      const tradeData = {\n        contract_type: prediction.contractType,\n        stake: prediction.stake,\n        duration: prediction.duration,\n        prediction: prediction.nextDigit\n      };\n      if (onTradeExecute) {\n        onTradeExecute(tradeData);\n      }\n      alert(`AI Trade Executed: ${prediction.contractType} - $${prediction.stake.toFixed(2)}`);\n    } catch (error) {\n      console.error('Error executing AI trade:', error);\n      alert('Error executing AI trade');\n    }\n  };\n  const copyTradeSettings = prediction => {\n    if (onSettingsCopy) {\n      onSettingsCopy({\n        contractType: prediction.contractType,\n        stake: prediction.stake,\n        duration: prediction.duration\n      });\n    }\n    alert('Settings copied to manual trading controls!');\n  };\n  const getSignalColor = signal => {\n    const colors = {\n      'STRONG_BUY': 'text-green-400',\n      'BUY': 'text-green-300',\n      'BUY_EVEN': 'text-blue-300',\n      'BUY_ODD': 'text-purple-300',\n      'HOLD': 'text-yellow-300',\n      'SELL': 'text-red-300'\n    };\n    return colors[signal] || 'text-gray-300';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-800 p-6 rounded-lg\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-6 text-center\",\n      children: \"\\uD83E\\uDD16 AI Trading Hub\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block text-sm font-medium mb-2\",\n        children: \"Select AI Model:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedModel,\n        onChange: e => setSelectedModel(e.target.value),\n        className: \"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded text-white\",\n        children: Object.entries(aiModels).map(([key, name]) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: key,\n          children: name\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6 p-4 bg-gray-700 rounded-lg text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-lg\",\n        children: \"\\uD83E\\uDD16 AI Models Analyzing...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-sm text-gray-400 mt-2\",\n        children: \"Generating predictions from multiple AI models\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 9\n    }, this), !loading && predictions[selectedModel] && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6 p-4 bg-gray-700 rounded-lg border-l-4 border-blue-500\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold mb-2\",\n        children: [aiModels[selectedModel], \" Prediction\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-2 gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-400\",\n            children: \"Next Digit:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-2 text-2xl font-bold text-blue-400\",\n            children: predictions[selectedModel].nextDigit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-400\",\n            children: \"Confidence:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-2 text-lg font-semibold text-green-400\",\n            children: [(predictions[selectedModel].confidence * 100).toFixed(1), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-400\",\n            children: \"Signal:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `ml-2 font-semibold ${getSignalColor(predictions[selectedModel].signal)}`,\n            children: predictions[selectedModel].signal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-400\",\n            children: \"Contract:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-2 text-white font-medium\",\n            children: predictions[selectedModel].contractType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-400\",\n            children: \"Recommended Stake:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-2 text-yellow-400 font-semibold\",\n            children: [\"$\", predictions[selectedModel].stake.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-400\",\n            children: \"Duration:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-2 text-white\",\n            children: [predictions[selectedModel].duration, \" ticks\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3 p-2 bg-gray-600 rounded\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm text-gray-300\",\n          children: \"Recommendation: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm text-white font-medium\",\n          children: recommendation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 9\n    }, this), !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n      children: Object.entries(predictions).map(([modelKey, pred]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-700 p-3 rounded border\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"font-semibold text-sm mb-2\",\n          children: aiModels[modelKey]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-1 text-xs\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Digit: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-bold text-blue-300\",\n              children: pred.nextDigit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Confidence: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-green-300\",\n              children: [(pred.confidence * 100).toFixed(0), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Signal: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: getSignalColor(pred.signal),\n              children: pred.signal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 28\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Contract: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-gray-300\",\n              children: pred.contractType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Stake: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-yellow-300\",\n              children: [\"$\", pred.stake.toFixed(1)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 13\n        }, this)]\n      }, modelKey, true, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 9\n    }, this), !loading && predictions[selectedModel] && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 p-4 bg-gradient-to-r from-green-800 to-blue-800 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold mb-3\",\n        children: \"\\u26A1 Quick AI Trade\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-2 gap-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => executeAITrade(predictions[selectedModel]),\n          className: \"px-4 py-2 bg-green-600 hover:bg-green-700 rounded font-medium transition-colors\",\n          children: \"\\uD83E\\uDD16 Execute AI Recommendation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => copyTradeSettings(predictions[selectedModel]),\n          className: \"px-4 py-2 bg-blue-600 hover:bg-blue-700 rounded font-medium transition-colors\",\n          children: \"\\uD83D\\uDCCB Copy Settings to Manual\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2 text-xs text-gray-300\",\n        children: [\"This will place a trade with AI recommended settings: \", predictions[selectedModel].contractType, \" - $\", predictions[selectedModel].stake.toFixed(2), \" - \", predictions[selectedModel].duration, \" ticks\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 9\n    }, this), !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 p-4 bg-gradient-to-r from-purple-800 to-blue-800 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold mb-2\",\n        children: \"\\uD83C\\uDFAF AI Consensus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-3 gap-4 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-2xl font-bold text-green-400\",\n            children: Object.values(predictions).filter(p => p.signal && p.signal.includes('BUY')).length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-gray-300\",\n            children: \"Buy Signals\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-2xl font-bold text-yellow-400\",\n            children: Object.values(predictions).filter(p => p.signal === 'HOLD').length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-gray-300\",\n            children: \"Hold Signals\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-2xl font-bold text-red-400\",\n            children: Object.values(predictions).filter(p => p.signal === 'SELL').length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-gray-300\",\n            children: \"Sell Signals\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 367,\n    columnNumber: 5\n  }, this);\n};\n_s(AITradingHub, \"RX4i+wUT9c2MYlwDVKg6vFU+zzA=\");\n_c = AITradingHub;\nexport default AITradingHub;\nvar _c;\n$RefreshReg$(_c, \"AITradingHub\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AITradingHub","currentPrice","priceHistory","onTradeExecute","onSettingsCopy","_s","predictions","setPredictions","selectedModel","setSelectedModel","confidence","setConfidence","recommendation","setRecommendation","loading","setLoading","aiModels","length","fetchAIPredictions","generatePredictions","fetch","method","headers","body","JSON","stringify","price","response","data","json","success","convertedPredictions","Object","entries","forEach","modelKey","pred","nextDigit","next_digit","signal","contractType","contract_type","stake","duration","selectedPred","generateRecommendation","error","console","keys","lastDigits","slice","map","p","last_digit","Math","floor","random","Array","from","prices","newPredictions","random_forest","predictByFrequency","getTrendSignal","calculateOptimalStake","neural_network","predictByPattern","getVolatilitySignal","lstm","predictBySequence","getMomentumSignal","svm","reduce","a","b","gradient_boost","predictByGradient","getGradientSignal","allDigits","ensemble","round","pattern_recognition","detectPattern","getPatternSignal","technical_analysis","technicalAnalysis","getTechnicalSignal","digits","freq","fill","d","indexOf","min","patterns","i","pattern","join","mostCommon","parseInt","diffs","push","avgDiff","abs","priceChange","digitTrend","sign","last3","occurrences","sma5","sma10","trend","volatility","sqrt","sum","arr","mean","pow","momentum","gradient","evenCount","filter","rsi","calculateRSI","gains","losses","change","avgGain","avgLoss","rs","max","toFixed","executeAITrade","prediction","tradeData","alert","copyTradeSettings","getSignalColor","colors","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","key","name","onClick","values","includes","_c","$RefreshReg$"],"sources":["D:/Code/Brightbot/frontend/src/components/AITradingHub.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst AITradingHub = ({ currentPrice, priceHistory, onTradeExecute, onSettingsCopy }) => {\n  const [predictions, setPredictions] = useState({});\n  const [selectedModel, setSelectedModel] = useState('ensemble');\n  const [confidence, setConfidence] = useState(0);\n  const [recommendation, setRecommendation] = useState('');\n  const [loading, setLoading] = useState(true);\n\n  const aiModels = {\n    'random_forest': 'Random Forest',\n    'neural_network': 'Neural Network',\n    'lstm': 'LSTM Deep Learning',\n    'svm': 'Support Vector Machine',\n    'gradient_boost': 'Gradient Boosting',\n    'ensemble': 'Ensemble (All Models)',\n    'pattern_recognition': 'Pattern Recognition',\n    'technical_analysis': 'Technical Analysis'\n  };\n\n  useEffect(() => {\n    // Generate predictions immediately, even with limited data\n    if (priceHistory.length > 0 || currentPrice > 0) {\n      fetchAIPredictions();\n    } else {\n      // Generate initial predictions with mock data\n      generatePredictions();\n    }\n  }, [currentPrice, priceHistory]);\n\n  useEffect(() => {\n    // Generate initial predictions on component mount\n    generatePredictions();\n  }, []);\n\n  const fetchAIPredictions = async () => {\n    try {\n      // Send current price to backend\n      if (currentPrice > 0) {\n        await fetch('http://localhost:8001/api/ai/add-price', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ price: currentPrice })\n        });\n      }\n      \n      // Get multi-model predictions\n      const response = await fetch('http://localhost:8001/api/ai/multi-predictions');\n      const data = await response.json();\n      \n      if (data.success && data.predictions) {\n        // Convert backend predictions to frontend format\n        const convertedPredictions = {};\n        \n        Object.entries(data.predictions).forEach(([modelKey, pred]) => {\n          convertedPredictions[modelKey] = {\n            nextDigit: pred.next_digit,\n            confidence: pred.confidence,\n            signal: pred.signal,\n            contractType: pred.contract_type,\n            stake: pred.stake,\n            duration: pred.duration\n          };\n        });\n        \n        setPredictions(convertedPredictions);\n        setLoading(false);\n        \n        // Set recommendation for selected model\n        if (convertedPredictions[selectedModel]) {\n          const selectedPred = convertedPredictions[selectedModel];\n          setConfidence(selectedPred.confidence);\n          setRecommendation(generateRecommendation(selectedPred));\n        }\n      } else {\n        // Fallback to local predictions\n        generatePredictions();\n      }\n    } catch (error) {\n      console.error('Error fetching AI predictions:', error);\n      // Fallback to local predictions\n      generatePredictions();\n    }\n  };\n\n  // Generate predictions immediately if no data\n  useEffect(() => {\n    if (Object.keys(predictions).length === 0) {\n      generatePredictions();\n    }\n  }, []);\n\n  const generatePredictions = () => {\n    // Fallback local predictions when backend is unavailable\n    const lastDigits = priceHistory.length > 0 ? \n      priceHistory.slice(-10).map(p => p.last_digit || Math.floor(Math.random() * 10)) :\n      Array.from({length: 10}, () => Math.floor(Math.random() * 10));\n    \n    const prices = priceHistory.length > 0 ? \n      priceHistory.slice(-20).map(p => p.price || 1000 + Math.random() * 100) :\n      Array.from({length: 20}, () => 1000 + Math.random() * 100);\n    \n    const newPredictions = {};\n    \n    // Random Forest\n    newPredictions.random_forest = {\n      nextDigit: predictByFrequency(lastDigits),\n      confidence: 0.65 + Math.random() * 0.25,\n      signal: getTrendSignal(prices),\n      contractType: 'DIGITEVEN',\n      stake: calculateOptimalStake(prices),\n      duration: 5\n    };\n\n    // Neural Network\n    newPredictions.neural_network = {\n      nextDigit: predictByPattern(lastDigits),\n      confidence: 0.70 + Math.random() * 0.20,\n      signal: getVolatilitySignal(prices),\n      contractType: 'DIGITODD',\n      stake: calculateOptimalStake(prices) * 1.2,\n      duration: 3\n    };\n\n    // LSTM\n    newPredictions.lstm = {\n      nextDigit: predictBySequence(lastDigits),\n      confidence: 0.75 + Math.random() * 0.15,\n      signal: getMomentumSignal(prices),\n      contractType: lastDigits[lastDigits.length - 1] % 2 === 0 ? 'DIGITODD' : 'DIGITEVEN',\n      stake: calculateOptimalStake(prices) * 0.8,\n      duration: 7\n    };\n\n    // SVM\n    newPredictions.svm = {\n      nextDigit: (lastDigits.reduce((a, b) => a + b, 0) / lastDigits.length) > 4.5 ? \n                 Math.floor(Math.random() * 5) : Math.floor(Math.random() * 5) + 5,\n      confidence: 0.60 + Math.random() * 0.30,\n      signal: 'BUY',\n      contractType: 'CALL',\n      stake: calculateOptimalStake(prices) * 1.5,\n      duration: 10\n    };\n\n    // Gradient Boosting\n    newPredictions.gradient_boost = {\n      nextDigit: predictByGradient(lastDigits, prices),\n      confidence: 0.68 + Math.random() * 0.22,\n      signal: getGradientSignal(prices),\n      contractType: 'PUT',\n      stake: calculateOptimalStake(prices) * 1.1,\n      duration: 5\n    };\n\n    // Ensemble\n    const allDigits = [\n      newPredictions.random_forest.nextDigit,\n      newPredictions.neural_network.nextDigit,\n      newPredictions.lstm.nextDigit,\n      newPredictions.svm.nextDigit,\n      newPredictions.gradient_boost.nextDigit\n    ];\n    \n    newPredictions.ensemble = {\n      nextDigit: Math.round(allDigits.reduce((a, b) => a + b, 0) / allDigits.length),\n      confidence: 0.80 + Math.random() * 0.15,\n      signal: 'STRONG_BUY',\n      contractType: 'DIGITEVEN',\n      stake: calculateOptimalStake(prices),\n      duration: 5\n    };\n\n    // Pattern Recognition\n    newPredictions.pattern_recognition = {\n      nextDigit: detectPattern(lastDigits),\n      confidence: 0.55 + Math.random() * 0.35,\n      signal: getPatternSignal(lastDigits),\n      contractType: 'DIGITDIFF',\n      stake: calculateOptimalStake(prices) * 0.9,\n      duration: 3\n    };\n\n    // Technical Analysis\n    newPredictions.technical_analysis = {\n      nextDigit: technicalAnalysis(prices),\n      confidence: 0.72 + Math.random() * 0.18,\n      signal: getTechnicalSignal(prices),\n      contractType: 'RANGE',\n      stake: calculateOptimalStake(prices) * 1.3,\n      duration: 8\n    };\n\n    setPredictions(newPredictions);\n    setLoading(false);\n    \n    // Set overall recommendation\n    const selectedPred = newPredictions[selectedModel] || newPredictions['ensemble'];\n    if (selectedPred) {\n      setConfidence(selectedPred.confidence);\n      setRecommendation(generateRecommendation(selectedPred));\n    }\n  };\n\n  // Prediction algorithms\n  const predictByFrequency = (digits) => {\n    const freq = Array(10).fill(0);\n    digits.forEach(d => freq[d]++);\n    return freq.indexOf(Math.min(...freq));\n  };\n\n  const predictByPattern = (digits) => {\n    const patterns = {};\n    for (let i = 0; i < digits.length - 2; i++) {\n      const pattern = digits.slice(i, i + 3).join('');\n      patterns[pattern] = (patterns[pattern] || 0) + 1;\n    }\n    const mostCommon = Object.keys(patterns).reduce((a, b) => \n      patterns[a] > patterns[b] ? a : b, '000');\n    return parseInt(mostCommon[2]) || Math.floor(Math.random() * 10);\n  };\n\n  const predictBySequence = (digits) => {\n    const diffs = [];\n    for (let i = 1; i < digits.length; i++) {\n      diffs.push(digits[i] - digits[i-1]);\n    }\n    const avgDiff = diffs.reduce((a, b) => a + b, 0) / diffs.length;\n    return Math.abs((digits[digits.length - 1] + avgDiff) % 10);\n  };\n\n  const predictByGradient = (digits, prices) => {\n    const priceChange = prices[prices.length - 1] - prices[prices.length - 5];\n    const digitTrend = digits[digits.length - 1] - digits[0];\n    return Math.abs((digits[digits.length - 1] + Math.sign(priceChange + digitTrend)) % 10);\n  };\n\n  const detectPattern = (digits) => {\n    // Look for repeating patterns\n    const last3 = digits.slice(-3);\n    const occurrences = [];\n    for (let i = 0; i < digits.length - 2; i++) {\n      if (digits.slice(i, i + 3).join('') === last3.join('')) {\n        if (i + 3 < digits.length) occurrences.push(digits[i + 3]);\n      }\n    }\n    return occurrences.length > 0 ? \n      occurrences[Math.floor(Math.random() * occurrences.length)] : \n      Math.floor(Math.random() * 10);\n  };\n\n  const technicalAnalysis = (prices) => {\n    const sma5 = prices.slice(-5).reduce((a, b) => a + b, 0) / 5;\n    const sma10 = prices.slice(-10).reduce((a, b) => a + b, 0) / 10;\n    const currentPrice = prices[prices.length - 1];\n    \n    if (currentPrice > sma5 && sma5 > sma10) {\n      return Math.floor(Math.random() * 5) + 5; // Higher digits\n    } else {\n      return Math.floor(Math.random() * 5); // Lower digits\n    }\n  };\n\n  // Signal generators\n  const getTrendSignal = (prices) => {\n    const trend = prices[prices.length - 1] - prices[prices.length - 5];\n    return trend > 0 ? 'BUY' : trend < 0 ? 'SELL' : 'HOLD';\n  };\n\n  const getVolatilitySignal = (prices) => {\n    const volatility = Math.sqrt(prices.slice(-5).reduce((sum, price, i, arr) => {\n      const mean = arr.reduce((a, b) => a + b, 0) / arr.length;\n      return sum + Math.pow(price - mean, 2);\n    }, 0) / 5);\n    return volatility > 2 ? 'STRONG_BUY' : volatility > 1 ? 'BUY' : 'HOLD';\n  };\n\n  const getMomentumSignal = (prices) => {\n    const momentum = (prices[prices.length - 1] - prices[prices.length - 3]) / prices[prices.length - 3];\n    return momentum > 0.001 ? 'BUY' : momentum < -0.001 ? 'SELL' : 'HOLD';\n  };\n\n  const getGradientSignal = (prices) => {\n    const gradient = prices[prices.length - 1] - prices[prices.length - 2];\n    return gradient > 0 ? 'BUY' : 'SELL';\n  };\n\n  const getPatternSignal = (digits) => {\n    const evenCount = digits.filter(d => d % 2 === 0).length;\n    return evenCount > digits.length / 2 ? 'BUY_EVEN' : 'BUY_ODD';\n  };\n\n  const getTechnicalSignal = (prices) => {\n    const rsi = calculateRSI(prices);\n    return rsi > 70 ? 'SELL' : rsi < 30 ? 'BUY' : 'HOLD';\n  };\n\n  const calculateRSI = (prices) => {\n    const gains = [], losses = [];\n    for (let i = 1; i < prices.length; i++) {\n      const change = prices[i] - prices[i - 1];\n      gains.push(change > 0 ? change : 0);\n      losses.push(change < 0 ? -change : 0);\n    }\n    const avgGain = gains.reduce((a, b) => a + b, 0) / gains.length;\n    const avgLoss = losses.reduce((a, b) => a + b, 0) / losses.length;\n    const rs = avgGain / avgLoss;\n    return 100 - (100 / (1 + rs));\n  };\n\n  const calculateOptimalStake = (prices) => {\n    const volatility = Math.sqrt(prices.slice(-5).reduce((sum, price, i, arr) => {\n      const mean = arr.reduce((a, b) => a + b, 0) / arr.length;\n      return sum + Math.pow(price - mean, 2);\n    }, 0) / 5);\n    return Math.max(1, Math.min(10, 5 / volatility));\n  };\n\n  const generateRecommendation = (pred) => {\n    return `${pred.signal} ${pred.contractType} - Stake: $${pred.stake.toFixed(2)} - Duration: ${pred.duration} ticks - Next Digit: ${pred.nextDigit}`;\n  };\n\n  const executeAITrade = async (prediction) => {\n    try {\n      const tradeData = {\n        contract_type: prediction.contractType,\n        stake: prediction.stake,\n        duration: prediction.duration,\n        prediction: prediction.nextDigit\n      };\n      \n      if (onTradeExecute) {\n        onTradeExecute(tradeData);\n      }\n      \n      alert(`AI Trade Executed: ${prediction.contractType} - $${prediction.stake.toFixed(2)}`);\n    } catch (error) {\n      console.error('Error executing AI trade:', error);\n      alert('Error executing AI trade');\n    }\n  };\n\n  const copyTradeSettings = (prediction) => {\n    if (onSettingsCopy) {\n      onSettingsCopy({\n        contractType: prediction.contractType,\n        stake: prediction.stake,\n        duration: prediction.duration\n      });\n    }\n    alert('Settings copied to manual trading controls!');\n  };\n\n  const getSignalColor = (signal) => {\n    const colors = {\n      'STRONG_BUY': 'text-green-400',\n      'BUY': 'text-green-300',\n      'BUY_EVEN': 'text-blue-300',\n      'BUY_ODD': 'text-purple-300',\n      'HOLD': 'text-yellow-300',\n      'SELL': 'text-red-300'\n    };\n    return colors[signal] || 'text-gray-300';\n  };\n\n  return (\n    <div className=\"bg-gray-800 p-6 rounded-lg\">\n      <h2 className=\"text-2xl font-bold mb-6 text-center\">🤖 AI Trading Hub</h2>\n      \n      {/* Model Selection */}\n      <div className=\"mb-6\">\n        <label className=\"block text-sm font-medium mb-2\">Select AI Model:</label>\n        <select\n          value={selectedModel}\n          onChange={(e) => setSelectedModel(e.target.value)}\n          className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded text-white\"\n        >\n          {Object.entries(aiModels).map(([key, name]) => (\n            <option key={key} value={key}>{name}</option>\n          ))}\n        </select>\n      </div>\n\n      {/* Loading State */}\n      {loading && (\n        <div className=\"mb-6 p-4 bg-gray-700 rounded-lg text-center\">\n          <div className=\"text-lg\">🤖 AI Models Analyzing...</div>\n          <div className=\"text-sm text-gray-400 mt-2\">Generating predictions from multiple AI models</div>\n        </div>\n      )}\n\n      {/* Main Prediction Display */}\n      {!loading && predictions[selectedModel] && (\n        <div className=\"mb-6 p-4 bg-gray-700 rounded-lg border-l-4 border-blue-500\">\n          <h3 className=\"text-lg font-semibold mb-2\">{aiModels[selectedModel]} Prediction</h3>\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div>\n              <span className=\"text-gray-400\">Next Digit:</span>\n              <span className=\"ml-2 text-2xl font-bold text-blue-400\">\n                {predictions[selectedModel].nextDigit}\n              </span>\n            </div>\n            <div>\n              <span className=\"text-gray-400\">Confidence:</span>\n              <span className=\"ml-2 text-lg font-semibold text-green-400\">\n                {(predictions[selectedModel].confidence * 100).toFixed(1)}%\n              </span>\n            </div>\n            <div>\n              <span className=\"text-gray-400\">Signal:</span>\n              <span className={`ml-2 font-semibold ${getSignalColor(predictions[selectedModel].signal)}`}>\n                {predictions[selectedModel].signal}\n              </span>\n            </div>\n            <div>\n              <span className=\"text-gray-400\">Contract:</span>\n              <span className=\"ml-2 text-white font-medium\">\n                {predictions[selectedModel].contractType}\n              </span>\n            </div>\n            <div>\n              <span className=\"text-gray-400\">Recommended Stake:</span>\n              <span className=\"ml-2 text-yellow-400 font-semibold\">\n                ${predictions[selectedModel].stake.toFixed(2)}\n              </span>\n            </div>\n            <div>\n              <span className=\"text-gray-400\">Duration:</span>\n              <span className=\"ml-2 text-white\">\n                {predictions[selectedModel].duration} ticks\n              </span>\n            </div>\n          </div>\n          <div className=\"mt-3 p-2 bg-gray-600 rounded\">\n            <span className=\"text-sm text-gray-300\">Recommendation: </span>\n            <span className=\"text-sm text-white font-medium\">{recommendation}</span>\n          </div>\n        </div>\n      )}\n\n      {/* All Models Overview */}\n      {!loading && (\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n          {Object.entries(predictions).map(([modelKey, pred]) => (\n          <div key={modelKey} className=\"bg-gray-700 p-3 rounded border\">\n            <h4 className=\"font-semibold text-sm mb-2\">{aiModels[modelKey]}</h4>\n            <div className=\"space-y-1 text-xs\">\n              <div>Digit: <span className=\"font-bold text-blue-300\">{pred.nextDigit}</span></div>\n              <div>Confidence: <span className=\"text-green-300\">{(pred.confidence * 100).toFixed(0)}%</span></div>\n              <div>Signal: <span className={getSignalColor(pred.signal)}>{pred.signal}</span></div>\n              <div>Contract: <span className=\"text-gray-300\">{pred.contractType}</span></div>\n              <div>Stake: <span className=\"text-yellow-300\">${pred.stake.toFixed(1)}</span></div>\n            </div>\n          </div>\n          ))}\n        </div>\n      )}\n\n      {/* Quick Trade Actions */}\n      {!loading && predictions[selectedModel] && (\n        <div className=\"mt-6 p-4 bg-gradient-to-r from-green-800 to-blue-800 rounded-lg\">\n          <h3 className=\"text-lg font-semibold mb-3\">⚡ Quick AI Trade</h3>\n          <div className=\"grid grid-cols-2 gap-3\">\n            <button\n              onClick={() => executeAITrade(predictions[selectedModel])}\n              className=\"px-4 py-2 bg-green-600 hover:bg-green-700 rounded font-medium transition-colors\"\n            >\n              🤖 Execute AI Recommendation\n            </button>\n            <button\n              onClick={() => copyTradeSettings(predictions[selectedModel])}\n              className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 rounded font-medium transition-colors\"\n            >\n              📋 Copy Settings to Manual\n            </button>\n          </div>\n          <div className=\"mt-2 text-xs text-gray-300\">\n            This will place a trade with AI recommended settings: {predictions[selectedModel].contractType} - \n            ${predictions[selectedModel].stake.toFixed(2)} - {predictions[selectedModel].duration} ticks\n          </div>\n        </div>\n      )}\n\n      {/* Consensus Indicator */}\n      {!loading && (\n        <div className=\"mt-6 p-4 bg-gradient-to-r from-purple-800 to-blue-800 rounded-lg\">\n        <h3 className=\"text-lg font-semibold mb-2\">🎯 AI Consensus</h3>\n        <div className=\"grid grid-cols-3 gap-4 text-center\">\n          <div>\n            <div className=\"text-2xl font-bold text-green-400\">\n              {Object.values(predictions).filter(p => p.signal && p.signal.includes('BUY')).length}\n            </div>\n            <div className=\"text-sm text-gray-300\">Buy Signals</div>\n          </div>\n          <div>\n            <div className=\"text-2xl font-bold text-yellow-400\">\n              {Object.values(predictions).filter(p => p.signal === 'HOLD').length}\n            </div>\n            <div className=\"text-sm text-gray-300\">Hold Signals</div>\n          </div>\n          <div>\n            <div className=\"text-2xl font-bold text-red-400\">\n              {Object.values(predictions).filter(p => p.signal === 'SELL').length}\n            </div>\n            <div className=\"text-sm text-gray-300\">Sell Signals</div>\n          </div>\n        </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AITradingHub;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}