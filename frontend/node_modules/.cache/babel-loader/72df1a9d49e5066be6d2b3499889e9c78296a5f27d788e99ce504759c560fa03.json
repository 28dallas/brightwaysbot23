{"ast":null,"code":"var _jsxFileName = \"d:\\\\Code\\\\Brightbot\\\\frontend\\\\src\\\\components\\\\Notifications.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Notifications({\n  trades,\n  balance\n}) {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  useEffect(() => {\n    if (trades.length > 0) {\n      const lastTrade = trades[0];\n      const newNotification = {\n        id: Date.now(),\n        type: lastTrade.result === 'win' ? 'success' : 'error',\n        message: `Trade ${lastTrade.result.toUpperCase()}: ${lastTrade.result === 'win' ? '+' : ''}$${lastTrade.pnl.toFixed(2)}`,\n        timestamp: new Date()\n      };\n      setNotifications(prev => [newNotification, ...prev.slice(0, 4)]);\n\n      // Auto remove after 5 seconds\n      setTimeout(() => {\n        setNotifications(prev => prev.filter(n => n.id !== newNotification.id));\n      }, 5000);\n    }\n  }, [trades]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed top-4 right-4 space-y-2 z-50\",\n    children: notifications.map(notification => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `p-4 rounded-lg shadow-lg max-w-sm ${notification.type === 'success' ? 'bg-green-600 text-white' : 'bg-red-600 text-white'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"font-medium\",\n        children: notification.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-sm opacity-75\",\n        children: notification.timestamp.toLocaleTimeString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, notification.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(Notifications, \"6gMUc0OfbF4zJu51/S5RmKCczuA=\");\n_c = Notifications;\nvar _c;\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Notifications","trades","balance","_s","notifications","setNotifications","length","lastTrade","newNotification","id","Date","now","type","result","message","toUpperCase","pnl","toFixed","timestamp","prev","slice","setTimeout","filter","n","className","children","map","notification","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleTimeString","_c","$RefreshReg$"],"sources":["d:/Code/Brightbot/frontend/src/components/Notifications.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nexport default function Notifications({ trades, balance }) {\n  const [notifications, setNotifications] = useState([]);\n\n  useEffect(() => {\n    if (trades.length > 0) {\n      const lastTrade = trades[0];\n      const newNotification = {\n        id: Date.now(),\n        type: lastTrade.result === 'win' ? 'success' : 'error',\n        message: `Trade ${lastTrade.result.toUpperCase()}: ${lastTrade.result === 'win' ? '+' : ''}$${lastTrade.pnl.toFixed(2)}`,\n        timestamp: new Date()\n      };\n      \n      setNotifications(prev => [newNotification, ...prev.slice(0, 4)]);\n      \n      // Auto remove after 5 seconds\n      setTimeout(() => {\n        setNotifications(prev => prev.filter(n => n.id !== newNotification.id));\n      }, 5000);\n    }\n  }, [trades]);\n\n  return (\n    <div className=\"fixed top-4 right-4 space-y-2 z-50\">\n      {notifications.map(notification => (\n        <div\n          key={notification.id}\n          className={`p-4 rounded-lg shadow-lg max-w-sm ${\n            notification.type === 'success' \n              ? 'bg-green-600 text-white' \n              : 'bg-red-600 text-white'\n          }`}\n        >\n          <div className=\"font-medium\">{notification.message}</div>\n          <div className=\"text-sm opacity-75\">\n            {notification.timestamp.toLocaleTimeString()}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,eAAe,SAASC,aAAaA,CAAC;EAAEC,MAAM;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EACzD,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACd,IAAII,MAAM,CAACK,MAAM,GAAG,CAAC,EAAE;MACrB,MAAMC,SAAS,GAAGN,MAAM,CAAC,CAAC,CAAC;MAC3B,MAAMO,eAAe,GAAG;QACtBC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;QACdC,IAAI,EAAEL,SAAS,CAACM,MAAM,KAAK,KAAK,GAAG,SAAS,GAAG,OAAO;QACtDC,OAAO,EAAE,SAASP,SAAS,CAACM,MAAM,CAACE,WAAW,CAAC,CAAC,KAAKR,SAAS,CAACM,MAAM,KAAK,KAAK,GAAG,GAAG,GAAG,EAAE,IAAIN,SAAS,CAACS,GAAG,CAACC,OAAO,CAAC,CAAC,CAAC,EAAE;QACxHC,SAAS,EAAE,IAAIR,IAAI,CAAC;MACtB,CAAC;MAEDL,gBAAgB,CAACc,IAAI,IAAI,CAACX,eAAe,EAAE,GAAGW,IAAI,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;MAEhE;MACAC,UAAU,CAAC,MAAM;QACfhB,gBAAgB,CAACc,IAAI,IAAIA,IAAI,CAACG,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACd,EAAE,KAAKD,eAAe,CAACC,EAAE,CAAC,CAAC;MACzE,CAAC,EAAE,IAAI,CAAC;IACV;EACF,CAAC,EAAE,CAACR,MAAM,CAAC,CAAC;EAEZ,oBACEF,OAAA;IAAKyB,SAAS,EAAC,oCAAoC;IAAAC,QAAA,EAChDrB,aAAa,CAACsB,GAAG,CAACC,YAAY,iBAC7B5B,OAAA;MAEEyB,SAAS,EAAE,qCACTG,YAAY,CAACf,IAAI,KAAK,SAAS,GAC3B,yBAAyB,GACzB,uBAAuB,EAC1B;MAAAa,QAAA,gBAEH1B,OAAA;QAAKyB,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAEE,YAAY,CAACb;MAAO;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACzDhC,OAAA;QAAKyB,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAChCE,YAAY,CAACT,SAAS,CAACc,kBAAkB,CAAC;MAAC;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC;IAAA,GAVDJ,YAAY,CAAClB,EAAE;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAWjB,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAC5B,EAAA,CAzCuBH,aAAa;AAAAiC,EAAA,GAAbjC,aAAa;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}