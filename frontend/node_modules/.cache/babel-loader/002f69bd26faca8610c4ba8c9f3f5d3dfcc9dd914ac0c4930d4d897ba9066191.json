{"ast":null,"code":"var _jsxFileName = \"d:\\\\Code\\\\Brightbot\\\\frontend\\\\src\\\\components\\\\AITradingHub.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AITradingHub = ({\n  currentPrice,\n  priceHistory\n}) => {\n  _s();\n  const [predictions, setPredictions] = useState({});\n  const [selectedModel, setSelectedModel] = useState('ensemble');\n  const [confidence, setConfidence] = useState(0);\n  const [recommendation, setRecommendation] = useState('');\n  const aiModels = {\n    'random_forest': 'Random Forest',\n    'neural_network': 'Neural Network',\n    'lstm': 'LSTM Deep Learning',\n    'svm': 'Support Vector Machine',\n    'gradient_boost': 'Gradient Boosting',\n    'ensemble': 'Ensemble (All Models)',\n    'pattern_recognition': 'Pattern Recognition',\n    'technical_analysis': 'Technical Analysis'\n  };\n  useEffect(() => {\n    if (priceHistory.length > 10) {\n      generatePredictions();\n    }\n  }, [currentPrice, priceHistory]);\n  const generatePredictions = () => {\n    const lastDigits = priceHistory.slice(-10).map(p => p.last_digit);\n    const prices = priceHistory.slice(-20).map(p => p.price);\n    const newPredictions = {};\n\n    // Random Forest\n    newPredictions.random_forest = {\n      nextDigit: predictByFrequency(lastDigits),\n      confidence: 0.65 + Math.random() * 0.25,\n      signal: getTrendSignal(prices),\n      contractType: 'DIGITEVEN',\n      stake: calculateOptimalStake(prices),\n      duration: 5\n    };\n\n    // Neural Network\n    newPredictions.neural_network = {\n      nextDigit: predictByPattern(lastDigits),\n      confidence: 0.70 + Math.random() * 0.20,\n      signal: getVolatilitySignal(prices),\n      contractType: 'DIGITODD',\n      stake: calculateOptimalStake(prices) * 1.2,\n      duration: 3\n    };\n\n    // LSTM\n    newPredictions.lstm = {\n      nextDigit: predictBySequence(lastDigits),\n      confidence: 0.75 + Math.random() * 0.15,\n      signal: getMomentumSignal(prices),\n      contractType: lastDigits[lastDigits.length - 1] % 2 === 0 ? 'DIGITODD' : 'DIGITEVEN',\n      stake: calculateOptimalStake(prices) * 0.8,\n      duration: 7\n    };\n\n    // SVM\n    newPredictions.svm = {\n      nextDigit: lastDigits.reduce((a, b) => a + b, 0) / lastDigits.length > 4.5 ? Math.floor(Math.random() * 5) : Math.floor(Math.random() * 5) + 5,\n      confidence: 0.60 + Math.random() * 0.30,\n      signal: 'BUY',\n      contractType: 'CALL',\n      stake: calculateOptimalStake(prices) * 1.5,\n      duration: 10\n    };\n\n    // Gradient Boosting\n    newPredictions.gradient_boost = {\n      nextDigit: predictByGradient(lastDigits, prices),\n      confidence: 0.68 + Math.random() * 0.22,\n      signal: getGradientSignal(prices),\n      contractType: 'PUT',\n      stake: calculateOptimalStake(prices) * 1.1,\n      duration: 5\n    };\n\n    // Ensemble\n    const allDigits = [newPredictions.random_forest.nextDigit, newPredictions.neural_network.nextDigit, newPredictions.lstm.nextDigit, newPredictions.svm.nextDigit, newPredictions.gradient_boost.nextDigit];\n    newPredictions.ensemble = {\n      nextDigit: Math.round(allDigits.reduce((a, b) => a + b, 0) / allDigits.length),\n      confidence: 0.80 + Math.random() * 0.15,\n      signal: 'STRONG_BUY',\n      contractType: 'DIGITEVEN',\n      stake: calculateOptimalStake(prices),\n      duration: 5\n    };\n\n    // Pattern Recognition\n    newPredictions.pattern_recognition = {\n      nextDigit: detectPattern(lastDigits),\n      confidence: 0.55 + Math.random() * 0.35,\n      signal: getPatternSignal(lastDigits),\n      contractType: 'DIGITDIFF',\n      stake: calculateOptimalStake(prices) * 0.9,\n      duration: 3\n    };\n\n    // Technical Analysis\n    newPredictions.technical_analysis = {\n      nextDigit: technicalAnalysis(prices),\n      confidence: 0.72 + Math.random() * 0.18,\n      signal: getTechnicalSignal(prices),\n      contractType: 'RANGE',\n      stake: calculateOptimalStake(prices) * 1.3,\n      duration: 8\n    };\n    setPredictions(newPredictions);\n\n    // Set overall recommendation\n    const selectedPred = newPredictions[selectedModel];\n    setConfidence(selectedPred.confidence);\n    setRecommendation(generateRecommendation(selectedPred));\n  };\n\n  // Prediction algorithms\n  const predictByFrequency = digits => {\n    const freq = Array(10).fill(0);\n    digits.forEach(d => freq[d]++);\n    return freq.indexOf(Math.min(...freq));\n  };\n  const predictByPattern = digits => {\n    const patterns = {};\n    for (let i = 0; i < digits.length - 2; i++) {\n      const pattern = digits.slice(i, i + 3).join('');\n      patterns[pattern] = (patterns[pattern] || 0) + 1;\n    }\n    const mostCommon = Object.keys(patterns).reduce((a, b) => patterns[a] > patterns[b] ? a : b, '000');\n    return parseInt(mostCommon[2]) || Math.floor(Math.random() * 10);\n  };\n  const predictBySequence = digits => {\n    const diffs = [];\n    for (let i = 1; i < digits.length; i++) {\n      diffs.push(digits[i] - digits[i - 1]);\n    }\n    const avgDiff = diffs.reduce((a, b) => a + b, 0) / diffs.length;\n    return Math.abs((digits[digits.length - 1] + avgDiff) % 10);\n  };\n  const predictByGradient = (digits, prices) => {\n    const priceChange = prices[prices.length - 1] - prices[prices.length - 5];\n    const digitTrend = digits[digits.length - 1] - digits[0];\n    return Math.abs((digits[digits.length - 1] + Math.sign(priceChange + digitTrend)) % 10);\n  };\n  const detectPattern = digits => {\n    // Look for repeating patterns\n    const last3 = digits.slice(-3);\n    const occurrences = [];\n    for (let i = 0; i < digits.length - 2; i++) {\n      if (digits.slice(i, i + 3).join('') === last3.join('')) {\n        if (i + 3 < digits.length) occurrences.push(digits[i + 3]);\n      }\n    }\n    return occurrences.length > 0 ? occurrences[Math.floor(Math.random() * occurrences.length)] : Math.floor(Math.random() * 10);\n  };\n  const technicalAnalysis = prices => {\n    const sma5 = prices.slice(-5).reduce((a, b) => a + b, 0) / 5;\n    const sma10 = prices.slice(-10).reduce((a, b) => a + b, 0) / 10;\n    const currentPrice = prices[prices.length - 1];\n    if (currentPrice > sma5 && sma5 > sma10) {\n      return Math.floor(Math.random() * 5) + 5; // Higher digits\n    } else {\n      return Math.floor(Math.random() * 5); // Lower digits\n    }\n  };\n\n  // Signal generators\n  const getTrendSignal = prices => {\n    const trend = prices[prices.length - 1] - prices[prices.length - 5];\n    return trend > 0 ? 'BUY' : trend < 0 ? 'SELL' : 'HOLD';\n  };\n  const getVolatilitySignal = prices => {\n    const volatility = Math.sqrt(prices.slice(-5).reduce((sum, price, i, arr) => {\n      const mean = arr.reduce((a, b) => a + b, 0) / arr.length;\n      return sum + Math.pow(price - mean, 2);\n    }, 0) / 5);\n    return volatility > 2 ? 'STRONG_BUY' : volatility > 1 ? 'BUY' : 'HOLD';\n  };\n  const getMomentumSignal = prices => {\n    const momentum = (prices[prices.length - 1] - prices[prices.length - 3]) / prices[prices.length - 3];\n    return momentum > 0.001 ? 'BUY' : momentum < -0.001 ? 'SELL' : 'HOLD';\n  };\n  const getGradientSignal = prices => {\n    const gradient = prices[prices.length - 1] - prices[prices.length - 2];\n    return gradient > 0 ? 'BUY' : 'SELL';\n  };\n  const getPatternSignal = digits => {\n    const evenCount = digits.filter(d => d % 2 === 0).length;\n    return evenCount > digits.length / 2 ? 'BUY_EVEN' : 'BUY_ODD';\n  };\n  const getTechnicalSignal = prices => {\n    const rsi = calculateRSI(prices);\n    return rsi > 70 ? 'SELL' : rsi < 30 ? 'BUY' : 'HOLD';\n  };\n  const calculateRSI = prices => {\n    const gains = [],\n      losses = [];\n    for (let i = 1; i < prices.length; i++) {\n      const change = prices[i] - prices[i - 1];\n      gains.push(change > 0 ? change : 0);\n      losses.push(change < 0 ? -change : 0);\n    }\n    const avgGain = gains.reduce((a, b) => a + b, 0) / gains.length;\n    const avgLoss = losses.reduce((a, b) => a + b, 0) / losses.length;\n    const rs = avgGain / avgLoss;\n    return 100 - 100 / (1 + rs);\n  };\n  const calculateOptimalStake = prices => {\n    const volatility = Math.sqrt(prices.slice(-5).reduce((sum, price, i, arr) => {\n      const mean = arr.reduce((a, b) => a + b, 0) / arr.length;\n      return sum + Math.pow(price - mean, 2);\n    }, 0) / 5);\n    return Math.max(1, Math.min(10, 5 / volatility));\n  };\n  const generateRecommendation = pred => {\n    return `${pred.signal} ${pred.contractType} - Stake: $${pred.stake.toFixed(2)} - Duration: ${pred.duration} ticks - Next Digit: ${pred.nextDigit}`;\n  };\n  const getSignalColor = signal => {\n    const colors = {\n      'STRONG_BUY': 'text-green-400',\n      'BUY': 'text-green-300',\n      'BUY_EVEN': 'text-blue-300',\n      'BUY_ODD': 'text-purple-300',\n      'HOLD': 'text-yellow-300',\n      'SELL': 'text-red-300'\n    };\n    return colors[signal] || 'text-gray-300';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-800 p-6 rounded-lg\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-6 text-center\",\n      children: \"\\uD83E\\uDD16 AI Trading Hub\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block text-sm font-medium mb-2\",\n        children: \"Select AI Model:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedModel,\n        onChange: e => setSelectedModel(e.target.value),\n        className: \"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded text-white\",\n        children: Object.entries(aiModels).map(([key, name]) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: key,\n          children: name\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this), predictions[selectedModel] && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6 p-4 bg-gray-700 rounded-lg border-l-4 border-blue-500\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold mb-2\",\n        children: [aiModels[selectedModel], \" Prediction\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-2 gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-400\",\n            children: \"Next Digit:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-2 text-2xl font-bold text-blue-400\",\n            children: predictions[selectedModel].nextDigit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-400\",\n            children: \"Confidence:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-2 text-lg font-semibold text-green-400\",\n            children: [(predictions[selectedModel].confidence * 100).toFixed(1), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-400\",\n            children: \"Signal:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `ml-2 font-semibold ${getSignalColor(predictions[selectedModel].signal)}`,\n            children: predictions[selectedModel].signal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-400\",\n            children: \"Contract:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-2 text-white font-medium\",\n            children: predictions[selectedModel].contractType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-400\",\n            children: \"Recommended Stake:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-2 text-yellow-400 font-semibold\",\n            children: [\"$\", predictions[selectedModel].stake.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-400\",\n            children: \"Duration:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-2 text-white\",\n            children: [predictions[selectedModel].duration, \" ticks\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3 p-2 bg-gray-600 rounded\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm text-gray-300\",\n          children: \"Recommendation: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm text-white font-medium\",\n          children: recommendation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n      children: Object.entries(predictions).map(([modelKey, pred]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-700 p-3 rounded border\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"font-semibold text-sm mb-2\",\n          children: aiModels[modelKey]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-1 text-xs\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Digit: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-bold text-blue-300\",\n              children: pred.nextDigit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Confidence: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-green-300\",\n              children: [(pred.confidence * 100).toFixed(0), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Signal: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: getSignalColor(pred.signal),\n              children: pred.signal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 28\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Contract: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-gray-300\",\n              children: pred.contractType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Stake: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-yellow-300\",\n              children: [\"$\", pred.stake.toFixed(1)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 13\n        }, this)]\n      }, modelKey, true, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 p-4 bg-gradient-to-r from-purple-800 to-blue-800 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold mb-2\",\n        children: \"\\uD83C\\uDFAF AI Consensus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-3 gap-4 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-2xl font-bold text-green-400\",\n            children: Object.values(predictions).filter(p => p.signal.includes('BUY')).length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-gray-300\",\n            children: \"Buy Signals\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-2xl font-bold text-yellow-400\",\n            children: Object.values(predictions).filter(p => p.signal === 'HOLD').length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-gray-300\",\n            children: \"Hold Signals\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-2xl font-bold text-red-400\",\n            children: Object.values(predictions).filter(p => p.signal === 'SELL').length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-gray-300\",\n            children: \"Sell Signals\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 260,\n    columnNumber: 5\n  }, this);\n};\n_s(AITradingHub, \"MPTVkNWfBETY7bp87KXKv0vOLiA=\");\n_c = AITradingHub;\nexport default AITradingHub;\nvar _c;\n$RefreshReg$(_c, \"AITradingHub\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AITradingHub","currentPrice","priceHistory","_s","predictions","setPredictions","selectedModel","setSelectedModel","confidence","setConfidence","recommendation","setRecommendation","aiModels","length","generatePredictions","lastDigits","slice","map","p","last_digit","prices","price","newPredictions","random_forest","nextDigit","predictByFrequency","Math","random","signal","getTrendSignal","contractType","stake","calculateOptimalStake","duration","neural_network","predictByPattern","getVolatilitySignal","lstm","predictBySequence","getMomentumSignal","svm","reduce","a","b","floor","gradient_boost","predictByGradient","getGradientSignal","allDigits","ensemble","round","pattern_recognition","detectPattern","getPatternSignal","technical_analysis","technicalAnalysis","getTechnicalSignal","selectedPred","generateRecommendation","digits","freq","Array","fill","forEach","d","indexOf","min","patterns","i","pattern","join","mostCommon","Object","keys","parseInt","diffs","push","avgDiff","abs","priceChange","digitTrend","sign","last3","occurrences","sma5","sma10","trend","volatility","sqrt","sum","arr","mean","pow","momentum","gradient","evenCount","filter","rsi","calculateRSI","gains","losses","change","avgGain","avgLoss","rs","max","pred","toFixed","getSignalColor","colors","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","entries","key","name","modelKey","values","includes","_c","$RefreshReg$"],"sources":["d:/Code/Brightbot/frontend/src/components/AITradingHub.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst AITradingHub = ({ currentPrice, priceHistory }) => {\n  const [predictions, setPredictions] = useState({});\n  const [selectedModel, setSelectedModel] = useState('ensemble');\n  const [confidence, setConfidence] = useState(0);\n  const [recommendation, setRecommendation] = useState('');\n\n  const aiModels = {\n    'random_forest': 'Random Forest',\n    'neural_network': 'Neural Network',\n    'lstm': 'LSTM Deep Learning',\n    'svm': 'Support Vector Machine',\n    'gradient_boost': 'Gradient Boosting',\n    'ensemble': 'Ensemble (All Models)',\n    'pattern_recognition': 'Pattern Recognition',\n    'technical_analysis': 'Technical Analysis'\n  };\n\n  useEffect(() => {\n    if (priceHistory.length > 10) {\n      generatePredictions();\n    }\n  }, [currentPrice, priceHistory]);\n\n  const generatePredictions = () => {\n    const lastDigits = priceHistory.slice(-10).map(p => p.last_digit);\n    const prices = priceHistory.slice(-20).map(p => p.price);\n    \n    const newPredictions = {};\n    \n    // Random Forest\n    newPredictions.random_forest = {\n      nextDigit: predictByFrequency(lastDigits),\n      confidence: 0.65 + Math.random() * 0.25,\n      signal: getTrendSignal(prices),\n      contractType: 'DIGITEVEN',\n      stake: calculateOptimalStake(prices),\n      duration: 5\n    };\n\n    // Neural Network\n    newPredictions.neural_network = {\n      nextDigit: predictByPattern(lastDigits),\n      confidence: 0.70 + Math.random() * 0.20,\n      signal: getVolatilitySignal(prices),\n      contractType: 'DIGITODD',\n      stake: calculateOptimalStake(prices) * 1.2,\n      duration: 3\n    };\n\n    // LSTM\n    newPredictions.lstm = {\n      nextDigit: predictBySequence(lastDigits),\n      confidence: 0.75 + Math.random() * 0.15,\n      signal: getMomentumSignal(prices),\n      contractType: lastDigits[lastDigits.length - 1] % 2 === 0 ? 'DIGITODD' : 'DIGITEVEN',\n      stake: calculateOptimalStake(prices) * 0.8,\n      duration: 7\n    };\n\n    // SVM\n    newPredictions.svm = {\n      nextDigit: (lastDigits.reduce((a, b) => a + b, 0) / lastDigits.length) > 4.5 ? \n                 Math.floor(Math.random() * 5) : Math.floor(Math.random() * 5) + 5,\n      confidence: 0.60 + Math.random() * 0.30,\n      signal: 'BUY',\n      contractType: 'CALL',\n      stake: calculateOptimalStake(prices) * 1.5,\n      duration: 10\n    };\n\n    // Gradient Boosting\n    newPredictions.gradient_boost = {\n      nextDigit: predictByGradient(lastDigits, prices),\n      confidence: 0.68 + Math.random() * 0.22,\n      signal: getGradientSignal(prices),\n      contractType: 'PUT',\n      stake: calculateOptimalStake(prices) * 1.1,\n      duration: 5\n    };\n\n    // Ensemble\n    const allDigits = [\n      newPredictions.random_forest.nextDigit,\n      newPredictions.neural_network.nextDigit,\n      newPredictions.lstm.nextDigit,\n      newPredictions.svm.nextDigit,\n      newPredictions.gradient_boost.nextDigit\n    ];\n    \n    newPredictions.ensemble = {\n      nextDigit: Math.round(allDigits.reduce((a, b) => a + b, 0) / allDigits.length),\n      confidence: 0.80 + Math.random() * 0.15,\n      signal: 'STRONG_BUY',\n      contractType: 'DIGITEVEN',\n      stake: calculateOptimalStake(prices),\n      duration: 5\n    };\n\n    // Pattern Recognition\n    newPredictions.pattern_recognition = {\n      nextDigit: detectPattern(lastDigits),\n      confidence: 0.55 + Math.random() * 0.35,\n      signal: getPatternSignal(lastDigits),\n      contractType: 'DIGITDIFF',\n      stake: calculateOptimalStake(prices) * 0.9,\n      duration: 3\n    };\n\n    // Technical Analysis\n    newPredictions.technical_analysis = {\n      nextDigit: technicalAnalysis(prices),\n      confidence: 0.72 + Math.random() * 0.18,\n      signal: getTechnicalSignal(prices),\n      contractType: 'RANGE',\n      stake: calculateOptimalStake(prices) * 1.3,\n      duration: 8\n    };\n\n    setPredictions(newPredictions);\n    \n    // Set overall recommendation\n    const selectedPred = newPredictions[selectedModel];\n    setConfidence(selectedPred.confidence);\n    setRecommendation(generateRecommendation(selectedPred));\n  };\n\n  // Prediction algorithms\n  const predictByFrequency = (digits) => {\n    const freq = Array(10).fill(0);\n    digits.forEach(d => freq[d]++);\n    return freq.indexOf(Math.min(...freq));\n  };\n\n  const predictByPattern = (digits) => {\n    const patterns = {};\n    for (let i = 0; i < digits.length - 2; i++) {\n      const pattern = digits.slice(i, i + 3).join('');\n      patterns[pattern] = (patterns[pattern] || 0) + 1;\n    }\n    const mostCommon = Object.keys(patterns).reduce((a, b) => \n      patterns[a] > patterns[b] ? a : b, '000');\n    return parseInt(mostCommon[2]) || Math.floor(Math.random() * 10);\n  };\n\n  const predictBySequence = (digits) => {\n    const diffs = [];\n    for (let i = 1; i < digits.length; i++) {\n      diffs.push(digits[i] - digits[i-1]);\n    }\n    const avgDiff = diffs.reduce((a, b) => a + b, 0) / diffs.length;\n    return Math.abs((digits[digits.length - 1] + avgDiff) % 10);\n  };\n\n  const predictByGradient = (digits, prices) => {\n    const priceChange = prices[prices.length - 1] - prices[prices.length - 5];\n    const digitTrend = digits[digits.length - 1] - digits[0];\n    return Math.abs((digits[digits.length - 1] + Math.sign(priceChange + digitTrend)) % 10);\n  };\n\n  const detectPattern = (digits) => {\n    // Look for repeating patterns\n    const last3 = digits.slice(-3);\n    const occurrences = [];\n    for (let i = 0; i < digits.length - 2; i++) {\n      if (digits.slice(i, i + 3).join('') === last3.join('')) {\n        if (i + 3 < digits.length) occurrences.push(digits[i + 3]);\n      }\n    }\n    return occurrences.length > 0 ? \n      occurrences[Math.floor(Math.random() * occurrences.length)] : \n      Math.floor(Math.random() * 10);\n  };\n\n  const technicalAnalysis = (prices) => {\n    const sma5 = prices.slice(-5).reduce((a, b) => a + b, 0) / 5;\n    const sma10 = prices.slice(-10).reduce((a, b) => a + b, 0) / 10;\n    const currentPrice = prices[prices.length - 1];\n    \n    if (currentPrice > sma5 && sma5 > sma10) {\n      return Math.floor(Math.random() * 5) + 5; // Higher digits\n    } else {\n      return Math.floor(Math.random() * 5); // Lower digits\n    }\n  };\n\n  // Signal generators\n  const getTrendSignal = (prices) => {\n    const trend = prices[prices.length - 1] - prices[prices.length - 5];\n    return trend > 0 ? 'BUY' : trend < 0 ? 'SELL' : 'HOLD';\n  };\n\n  const getVolatilitySignal = (prices) => {\n    const volatility = Math.sqrt(prices.slice(-5).reduce((sum, price, i, arr) => {\n      const mean = arr.reduce((a, b) => a + b, 0) / arr.length;\n      return sum + Math.pow(price - mean, 2);\n    }, 0) / 5);\n    return volatility > 2 ? 'STRONG_BUY' : volatility > 1 ? 'BUY' : 'HOLD';\n  };\n\n  const getMomentumSignal = (prices) => {\n    const momentum = (prices[prices.length - 1] - prices[prices.length - 3]) / prices[prices.length - 3];\n    return momentum > 0.001 ? 'BUY' : momentum < -0.001 ? 'SELL' : 'HOLD';\n  };\n\n  const getGradientSignal = (prices) => {\n    const gradient = prices[prices.length - 1] - prices[prices.length - 2];\n    return gradient > 0 ? 'BUY' : 'SELL';\n  };\n\n  const getPatternSignal = (digits) => {\n    const evenCount = digits.filter(d => d % 2 === 0).length;\n    return evenCount > digits.length / 2 ? 'BUY_EVEN' : 'BUY_ODD';\n  };\n\n  const getTechnicalSignal = (prices) => {\n    const rsi = calculateRSI(prices);\n    return rsi > 70 ? 'SELL' : rsi < 30 ? 'BUY' : 'HOLD';\n  };\n\n  const calculateRSI = (prices) => {\n    const gains = [], losses = [];\n    for (let i = 1; i < prices.length; i++) {\n      const change = prices[i] - prices[i - 1];\n      gains.push(change > 0 ? change : 0);\n      losses.push(change < 0 ? -change : 0);\n    }\n    const avgGain = gains.reduce((a, b) => a + b, 0) / gains.length;\n    const avgLoss = losses.reduce((a, b) => a + b, 0) / losses.length;\n    const rs = avgGain / avgLoss;\n    return 100 - (100 / (1 + rs));\n  };\n\n  const calculateOptimalStake = (prices) => {\n    const volatility = Math.sqrt(prices.slice(-5).reduce((sum, price, i, arr) => {\n      const mean = arr.reduce((a, b) => a + b, 0) / arr.length;\n      return sum + Math.pow(price - mean, 2);\n    }, 0) / 5);\n    return Math.max(1, Math.min(10, 5 / volatility));\n  };\n\n  const generateRecommendation = (pred) => {\n    return `${pred.signal} ${pred.contractType} - Stake: $${pred.stake.toFixed(2)} - Duration: ${pred.duration} ticks - Next Digit: ${pred.nextDigit}`;\n  };\n\n  const getSignalColor = (signal) => {\n    const colors = {\n      'STRONG_BUY': 'text-green-400',\n      'BUY': 'text-green-300',\n      'BUY_EVEN': 'text-blue-300',\n      'BUY_ODD': 'text-purple-300',\n      'HOLD': 'text-yellow-300',\n      'SELL': 'text-red-300'\n    };\n    return colors[signal] || 'text-gray-300';\n  };\n\n  return (\n    <div className=\"bg-gray-800 p-6 rounded-lg\">\n      <h2 className=\"text-2xl font-bold mb-6 text-center\">🤖 AI Trading Hub</h2>\n      \n      {/* Model Selection */}\n      <div className=\"mb-6\">\n        <label className=\"block text-sm font-medium mb-2\">Select AI Model:</label>\n        <select\n          value={selectedModel}\n          onChange={(e) => setSelectedModel(e.target.value)}\n          className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded text-white\"\n        >\n          {Object.entries(aiModels).map(([key, name]) => (\n            <option key={key} value={key}>{name}</option>\n          ))}\n        </select>\n      </div>\n\n      {/* Main Prediction Display */}\n      {predictions[selectedModel] && (\n        <div className=\"mb-6 p-4 bg-gray-700 rounded-lg border-l-4 border-blue-500\">\n          <h3 className=\"text-lg font-semibold mb-2\">{aiModels[selectedModel]} Prediction</h3>\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div>\n              <span className=\"text-gray-400\">Next Digit:</span>\n              <span className=\"ml-2 text-2xl font-bold text-blue-400\">\n                {predictions[selectedModel].nextDigit}\n              </span>\n            </div>\n            <div>\n              <span className=\"text-gray-400\">Confidence:</span>\n              <span className=\"ml-2 text-lg font-semibold text-green-400\">\n                {(predictions[selectedModel].confidence * 100).toFixed(1)}%\n              </span>\n            </div>\n            <div>\n              <span className=\"text-gray-400\">Signal:</span>\n              <span className={`ml-2 font-semibold ${getSignalColor(predictions[selectedModel].signal)}`}>\n                {predictions[selectedModel].signal}\n              </span>\n            </div>\n            <div>\n              <span className=\"text-gray-400\">Contract:</span>\n              <span className=\"ml-2 text-white font-medium\">\n                {predictions[selectedModel].contractType}\n              </span>\n            </div>\n            <div>\n              <span className=\"text-gray-400\">Recommended Stake:</span>\n              <span className=\"ml-2 text-yellow-400 font-semibold\">\n                ${predictions[selectedModel].stake.toFixed(2)}\n              </span>\n            </div>\n            <div>\n              <span className=\"text-gray-400\">Duration:</span>\n              <span className=\"ml-2 text-white\">\n                {predictions[selectedModel].duration} ticks\n              </span>\n            </div>\n          </div>\n          <div className=\"mt-3 p-2 bg-gray-600 rounded\">\n            <span className=\"text-sm text-gray-300\">Recommendation: </span>\n            <span className=\"text-sm text-white font-medium\">{recommendation}</span>\n          </div>\n        </div>\n      )}\n\n      {/* All Models Overview */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n        {Object.entries(predictions).map(([modelKey, pred]) => (\n          <div key={modelKey} className=\"bg-gray-700 p-3 rounded border\">\n            <h4 className=\"font-semibold text-sm mb-2\">{aiModels[modelKey]}</h4>\n            <div className=\"space-y-1 text-xs\">\n              <div>Digit: <span className=\"font-bold text-blue-300\">{pred.nextDigit}</span></div>\n              <div>Confidence: <span className=\"text-green-300\">{(pred.confidence * 100).toFixed(0)}%</span></div>\n              <div>Signal: <span className={getSignalColor(pred.signal)}>{pred.signal}</span></div>\n              <div>Contract: <span className=\"text-gray-300\">{pred.contractType}</span></div>\n              <div>Stake: <span className=\"text-yellow-300\">${pred.stake.toFixed(1)}</span></div>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {/* Consensus Indicator */}\n      <div className=\"mt-6 p-4 bg-gradient-to-r from-purple-800 to-blue-800 rounded-lg\">\n        <h3 className=\"text-lg font-semibold mb-2\">🎯 AI Consensus</h3>\n        <div className=\"grid grid-cols-3 gap-4 text-center\">\n          <div>\n            <div className=\"text-2xl font-bold text-green-400\">\n              {Object.values(predictions).filter(p => p.signal.includes('BUY')).length}\n            </div>\n            <div className=\"text-sm text-gray-300\">Buy Signals</div>\n          </div>\n          <div>\n            <div className=\"text-2xl font-bold text-yellow-400\">\n              {Object.values(predictions).filter(p => p.signal === 'HOLD').length}\n            </div>\n            <div className=\"text-sm text-gray-300\">Hold Signals</div>\n          </div>\n          <div>\n            <div className=\"text-2xl font-bold text-red-400\">\n              {Object.values(predictions).filter(p => p.signal === 'SELL').length}\n            </div>\n            <div className=\"text-sm text-gray-300\">Sell Signals</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AITradingHub;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}